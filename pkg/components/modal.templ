package components

import "github.com/axzilla/goilerplate/pkg/utils"

type ModalProps struct {
	// ID uniquely identifies the modal for open/close control
	ID string

	// Class adds custom CSS classes
	Class string
}

// Modal renders a popup dialog window with customizable content.
// Uses Alpine.js for interactions and animations.
// For detailed examples and usage guides, visit https://goilerplate.com/docs/components/modal
//
// Props:
// - ID: Unique identifier for control
// - Class: Additional CSS classes
templ Modal(props ModalProps) {
	<div
		x-data="{ open: false }"
		x-on:open-modal.window="if ($event.detail.id === $el.dataset.modalId) open = true"
		x-on:close-modal.window="if ($event.detail.id === $el.dataset.modalId) open = false"
		data-modal-id={ props.ID }
		x-show="open"
		x-transition:enter="transition ease-out duration-300"
		x-transition:enter-start="opacity-0"
		x-transition:enter-end="opacity-100"
		x-transition:leave="transition ease-in duration-200"
		x-transition:leave-start="opacity-100"
		x-transition:leave-end="opacity-0"
		class="fixed inset-0 z-50 flex items-center justify-center overflow-y-auto"
		aria-labelledby="modal-title"
		role="dialog"
		aria-modal="true"
	>
		<div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity" aria-hidden="true"></div>
		<div
			class={
				utils.TwMerge(
					"relative bg-background rounded-lg border text-left overflow-hidden shadow-xl transform transition-all sm:my-8 w-full",
					props.Class),
			}
			@click.away="open = false"
		>
			{ children... }
		</div>
	</div>
}

// ModalTrigger creates clickable elements that open a modal
// ID parameter must match the target modal's ID
templ ModalTrigger(id string) {
	<span
		data-modal-id={ id }
		@click="$dispatch('open-modal', { id: $el.dataset.modalId })"
	>
		{ children... }
	</span>
}

// ModalClose creates clickable elements that close a modal
// ID parameter must match the target modal's ID
templ ModalClose(id string) {
	<span
		data-modal-id={ id }
		@click="$dispatch('close-modal', { id: $el.dataset.modalId })"
	>
		{ children... }
	</span>
}

// ModalHeader renders the modal title section
templ ModalHeader() {
	<div class="px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
		<h3 class="text-lg leading-6 font-medium text-foreground" id="modal-title">
			{ children... }
		</h3>
	</div>
}

/// ModalBody renders the main modal content area
templ ModalBody() {
	<div class="px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
		{ children... }
	</div>
}

// ModalFooter renders the modal action buttons section
templ ModalFooter() {
	<div class="px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
		{ children... }
	</div>
}
