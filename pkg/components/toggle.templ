package components

// / ToggleSize defines the available toggle dimensions
type ToggleSize string

// ToggleLabelPlacement defines label position options
type ToggleLabelPlacement string

type ToggleProps struct {
	// ID uniquely identifies the toggle
	ID string

	// Name sets the form field name
	Name string

	// LabelLeft displays text before toggle
	LabelLeft string

	// LabelRight displays text after toggle
	LabelRight string

	// Class adds custom CSS classes
	Class string

	// Attributes for additional HTML attributes and Alpine.js bindings
	Attributes templ.Attributes
}

// Toggle renders a switch control for boolean values.
// Uses Alpine.js for state management and animations.
// For detailed examples and usage guides, visit https://goilerplate.com/docs/components/toggle
//
// Props:
// - ID: Unique identifier
// - Name: Form field name
// - LabelLeft: Text before toggle
// - LabelRight: Text after toggle
// - Class: Additional CSS classes
// - Attributes: Additional HTML attributes
//
// Features:
// - Animated switching
// - Keyboard navigation
// - Label placement options
// - ARIA support
templ Toggle(props ToggleProps) {
	<label for={ props.ID } class="inline-flex cursor-pointer items-center gap-2">
		<input
			id={ props.ID }
			type="checkbox"
			name={ props.Name }
			class="peer sr-only"
			role="switch"
			{ props.Attributes... }
		/>
		if props.LabelLeft != "" {
			<span class="text-sm select-none text-muted-foreground peer-checked:text-foreground peer-disabled:cursor-not-allowed peer-disabled:opacity-50">
				{ props.LabelLeft }
			</span>
		}
		<div
			class="relative h-6 w-10 rounded-full bg-neutral-200 after:h-5 after:w-5 peer-checked:after:translate-x-[16px] after:absolute after:left-0.5 after:top-0.5 after:rounded-full after:bg-muted-foreground after:transition-all after:content-[''] peer-checked:bg-primary peer-checked:after:bg-secondary peer-disabled:opacity-50 peer-disabled:cursor-not-allowed"
			aria-hidden="true"
		></div>
		if props.LabelRight != "" {
			<span class="text-sm select-none text-muted-foreground peer-checked:text-foreground peer-disabled:cursor-not-allowed peer-disabled:opacity-50">
				{ props.LabelRight }
			</span>
		}
	</label>
}
