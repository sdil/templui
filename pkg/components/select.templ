// pkg/components/select.templ

package components

import "github.com/axzilla/goilerplate/pkg/icons"

type SelectProps struct {
	// ID uniquely identifies the select input
	ID string

	// Name sets the form field name
	Name string

	// Placeholder shows text when no option selected
	Placeholder string

	// Options defines available choices
	Options []SelectOption

	// Class adds custom CSS classes
	Class string

	// Attributes for additional HTML attributes and Alpine.js bindings
	Attributes templ.Attributes
}

type SelectOption struct {
	// Label displays text in dropdown
	Label string

	// Value sets the option's form value
	Value string

	// Attributes for disabled state or other HTML attributes
	Attributes templ.Attributes
}

// Select renders a dropdown menu component with keyboard navigation.
// For detailed examples and usage guides, visit https://goilerplate.com/docs/components/select
//
// Props:
// - ID: Unique identifier
// - Name: Form field name
// - Placeholder: Default text
// - Options: Available choices
// - Class: Additional CSS classes
// - Attributes: Additional HTML attributes
//
// Features:
// - Keyboard navigation
// - Disabled state support
// - Alpine.js integration
// - Custom styling via Tailwind
templ Select(props SelectProps) {
	<div class="relative">
		<select
			id={ props.ID }
			name={ props.Name }
			class="peer h-10 w-full appearance-none rounded-md border border-input bg-background px-3 py-2 text-sm 
                   ring-offset-background placeholder:text-muted-foreground
                   focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2
                   disabled:cursor-not-allowed disabled:opacity-50"
			{ props.Attributes... }
		>
			if props.Placeholder != "" {
				<option value="" disabled selected hidden>{ props.Placeholder }</option>
			}
			for _, option := range props.Options {
				<option
					value={ option.Value }
					{ option.Attributes... }
				>
					{ option.Label }
				</option>
			}
		</select>
		<div class="absolute right-3 top-3 pointer-events-none peer-disabled:opacity-50">
			@icons.ChevronDown(icons.IconProps{Size: "16", Class: "text-muted-foreground"})
		</div>
	</div>
}
